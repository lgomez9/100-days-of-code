// Challenge 45: Triangular, pentagonal, and hexagonal
import java.io.*;
/* Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
 *
 * Triangle:    Tn = n(n+1) / 2     : 1, 3, 6, 10, 15, ...
 * Pentagonal:  Pn = n(3n-1) / 2    : 1, 5, 12, 22, 35, ...
 * Hexagonal:   Hn = n(2n-1)        : 1, 6, 15, 28, 45, ...
 *
 * It can be verified that T285 = P165 = H143 = 40755.
 * Find the next triangle number that is also pentagonal and hexagonal.
 *
 */

public class challenge45 {
  // Returns the nth triangular number
  static long triangleNumber(long n) {
    return (n * (n + 1)) / 2;
  }

  // Returns whether a number is a triangular number
  static boolean isTriangular(long n) {
    return (1 + Math.sqrt(1 + 8 * n)) % 2 == 0;
  }

  // Returns whether a number is a pentagonal number
  static boolean isPentagonal(long n) {
    return (1 + Math.sqrt(1 + 24 * n)) % 6 == 0;
  }

  // Returns whether a number is a hexagonal number
  static boolean isHexagonal(long n) {
    return (1 + Math.sqrt(1 + 8 * n)) % 4 == 0;
  }

  // Returns whether a number is triangle, pentagonal and hexagonal
  static boolean isAllThree(long n) {
    return isTriangular(n) && isPentagonal(n) && isHexagonal(n);
  }

  // Finds the next triangle number that is all three after 40755
  static long nextAllThree() {
    long currNum = 286;
    boolean found = false;
    long currTriangle = 40755;

    while(!found) {
      currTriangle = triangleNumber(currNum);

      if(isAllThree(currTriangle)) found = true;

      currNum++;
    }

    return currTriangle;
  }

  public static void main(String args[]) {
    System.out.println("40755 is a triangular, hexagonal, and pentagonal number: " + isAllThree(40755));
    System.out.println("285th triangular number is " + triangleNumber(285));

    try {
      PrintStream o = new PrintStream(new File("out45.txt"));
      System.setOut(o);

      System.out.println("Next triangle number that is also hexagonal and pentagonal is " + nextAllThree());
    } catch(Exception e) {
      System.out.println(e);
    }
  }
}
